/*
 * *
 *  * Created by AhlaamK on 10/26/23, 7:02 AM
 *  * Copyright (c) 2023 . All rights reserved Tap Payments.
 *  *
 *
 */

plugins {
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
    id 'kotlin-parcelize'
    id 'maven-publish'
}

android {
    namespace = "company.tap.tapcheckout_android"
    compileSdk = 36

    defaultConfig {
        minSdk = 24
        targetSdk = 36

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

dependencies {
    def lifecycle_version = "2.6.2"

    api("androidx.core:core-ktx:1.12.0")

    api("androidx.appcompat:appcompat:1.6.1")
    api("com.google.android.material:material:1.11.0")

    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")

    api 'io.reactivex.rxjava3:rxjava:3.1.5'
    api 'io.reactivex.rxjava3:rxandroid:3.0.2'
    api 'com.github.Tap-Payments:TapNetwrok-Android:0.2.2.45'
    api 'com.google.code.gson:gson:2.13.2'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    api 'com.github.Tap-Payments:LocalisationManager-Android:0.0.1.34'
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    api "com.squareup.retrofit2:converter-gson:2.9.0"
    api 'androidx.lifecycle:lifecycle-process:2.6.2'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
   // api 'com.github.Tap-Payments:TapUIKit-Android:2.0.16'
    api 'com.koushikdutta.ion:ion:3.1.0'

        api 'com.intuit.sdp:sdp-android:1.1.1'

    api 'com.github.Tap-Payments:TapNFCCardReaderKit-Android:0.0.5'
    api 'com.github.Tap-Payments:TapCardScannerKit-Android:0.0.12'
    /**
     * update this library in tapUiLibrary to be used automatically
     */
    api 'jp.wasabeef:blurry:4.0.1'
    api 'com.github.bumptech.glide:glide:4.12.0'
    api 'com.github.Tap-Payments:CommonDataModelsWeb-Andriod:0.0.15'
    api("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")


    def lottieVersion = "6.1.0"
    api "com.airbnb.android:lottie:$lottieVersion"




}

// Create sources and Javadoc JARs
task releaseSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

task releaseJavadoc(type: Jar) {
    archiveClassifier.set('javadoc')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            create("release", MavenPublication) {
                // Publish AAR
                artifact("$buildDir/outputs/aar/${project.name}-release.aar") {
                    builtBy tasks.named("assembleRelease")
                }

                // Attach sources and javadoc
                artifact(tasks.named("releaseSourcesJar"))
                artifact(tasks.named("releaseJavadoc"))

                groupId = "com.github.Tap-Payments"
                artifactId = "Checkout-Android"
                version = "1.0.5"

                // Variant-aware: ensure dependencies are included in POM
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.api.allDependencies.each { dep ->
                        def depNode = dependenciesNode.appendNode('dependency')
                        depNode.appendNode('groupId', dep.group)
                        depNode.appendNode('artifactId', dep.name)
                        depNode.appendNode('version', dep.version)
                        depNode.appendNode('scope', 'compile')
                    }
                }
            }
        }
    }

    // Ensure metadata waits for sources/javadoc
    tasks.named("generateMetadataFileForReleasePublication") {
        dependsOn(tasks.named("releaseSourcesJar"))
        dependsOn(tasks.named("releaseJavadoc"))
    }
}

